<?php

use Core\Utility;

function my_autoloader($class) {

    // explode namespace
    $classes = explode('\\', $class);
    if(in_array($classes[0], ['Core','Modules']))
    {
        $classType = $classes[0];
        unset($classes[0]);
        if($classType == 'Core')
        {
            $importClass = 'core/src/' . implode('/',$classes);
            
        }

        else if($classType == 'Modules')
        {
            $classes[1] = strtolower($classes[1]);
            $classes[2] = strtolower($classes[2]);
            
            $importClass = 'modules/' . implode('/',$classes);
        }

        if(file_exists($importClass.'.php'))
        {
            require $importClass.'.php';
        }
        else
        {
            die($class . ' is not valid');
        }
    }
}

spl_autoload_register('my_autoloader');

require Utility::parentPath() . 'core/functions.php';

$protocol = 'http';
$port     = '8080';
$address  = '127.0.0.1';
$command  = "";

// count command line arguments
if(isset($argv[1]))
{
    if($argv[1] == 'web')
    {
        foreach ($argv as $arg) {
            $e=explode("=",$arg);
            if($e[0] == '--address')
            {
                $address = $e[1];
            }
        
            if($e[0] == '--port')
            {
                $port = $e[1];
            }
            
        }
        
        echo "PHP Boilerplate Started at $protocol://$address:$port\n";
        $cmd = "php -S ".$address.":".$port." -t public/";
        shell_exec($cmd);
        die();
    }

    $commandFile = null;

    if(stringContains($argv[1], ':'))
    {
        $commandQuery = explode(':', $argv[1])[0];
        if(in_array($commandQuery, ['db','publish','schedulers','modules']))
        {
            $commandFile = str_replace(':','/', $argv[1]);
            $commandFile = $commandFile ? Utility::parentPath() . "core/commands/$commandFile.php" : null;
            if($commandFile)
            {
                if(file_exists($commandFile))
                {
                    require $commandFile;
                }
                else
                {
                    echo "File core/commands/$commandFile.php not found\n";
                }
            }
        }
        else
        {
            // modules command
            $commandFile = explode(':', $argv[1])[1];
            $commandFile = $commandFile ? Utility::parentPath() . "modules/$commandQuery/commands/$commandFile.php" : null;
            if($commandFile)
            {
                if(file_exists($commandFile))
                {
                    require $commandFile;
                }
                else
                {
                    echo "File modules/$commandQuery/commands/$commandFile.php not found\n";
                }
            }
        }
        die();
    }
}
